#!/usr/bin/perl -w

# input: epochs e.g. "1421971199"
# output: epoch 1421971199 is date 2015-01-22 23:59:59 UTC aka 2015-01-22 18:59:59 EST aka America/Toronto

use strict;
use Date::Calc qw(:all);
use DateTime;

sub handle_epoch {
    my $line = shift;
    if ( $line =~ /^\s*#/ ) {
	print;
	return;
    }
    chomp $line;

    $line =~ s/^\s+|\s+$//g;
    my $tstamp = $line;
    return unless $tstamp =~ /^\d+$/;
    my ($year,$month,$day, $hour,$min,$sec, $doy,$dow,$dst) = Gmtime($tstamp);
#    printf("epoch %s is date %04d-%02d-%02d %02d:%02d:%02d\n", $tstamp, $year, $month, $day, $hour,$min,$sec);

    my $gmtime = sprintf("%04d-%02d-%02d %02d:%02d:%02d UTC", $year, $month, $day, $hour,$min,$sec);

    my $dt = DateTime->from_epoch ( epoch => $tstamp, time_zone => 'America/Toronto' );
    my $toronto_time = $dt->ymd . ' ' . $dt->hms . ' ' .  $dt->time_zone->short_name_for_datetime( $dt ) . ' aka ' . $dt->time_zone->name;
#    my $toronto_time = $dt->ymd . ' ' . $dt->hms . ' ' . ' aka ' . $dt->time_zone->name;

    printf("epoch %s is date %s aka %s\n", $tstamp, $gmtime, $toronto_time );
}

sub main {
    if ( @ARGV == 1 && $ARGV[0] =~ /^\d+$/ ) {
	handle_epoch( $ARGV[0] );
    } else {
	while(<>) {
	    handle_epoch( $_ );
	}
    }
}
main();
